|memoria_fpga_top
clk50 => clk50.IN5
SW[0] => SW[0].IN2
SW[1] => SW[1].IN2
SW[2] => SW[2].IN2
SW[3] => SW[3].IN2
KEY0_n => KEY0_n.IN1
KEY1_n => KEY1_n.IN1
RESET_n => RESET_n.IN4
vgaclk << vgaclk.DB_MAX_OUTPUT_PORT_TYPE
hsync << vgaController:u_vgac.hsync
vsync << vgaController:u_vgac.vsync
sync_b << vgaController:u_vgac.sync_b
blank_b << blank_b.DB_MAX_OUTPUT_PORT_TYPE
r[0] << videoGen_game:u_vgen.r
r[1] << videoGen_game:u_vgen.r
r[2] << videoGen_game:u_vgen.r
r[3] << videoGen_game:u_vgen.r
r[4] << videoGen_game:u_vgen.r
r[5] << videoGen_game:u_vgen.r
r[6] << videoGen_game:u_vgen.r
r[7] << videoGen_game:u_vgen.r
g[0] << videoGen_game:u_vgen.g
g[1] << videoGen_game:u_vgen.g
g[2] << videoGen_game:u_vgen.g
g[3] << videoGen_game:u_vgen.g
g[4] << videoGen_game:u_vgen.g
g[5] << videoGen_game:u_vgen.g
g[6] << videoGen_game:u_vgen.g
g[7] << videoGen_game:u_vgen.g
b[0] << videoGen_game:u_vgen.b
b[1] << videoGen_game:u_vgen.b
b[2] << videoGen_game:u_vgen.b
b[3] << videoGen_game:u_vgen.b
b[4] << videoGen_game:u_vgen.b
b[5] << videoGen_game:u_vgen.b
b[6] << videoGen_game:u_vgen.b
b[7] << videoGen_game:u_vgen.b
LED_P1 << turn_leds:u_leds.led_p1
LED_P2 << turn_leds:u_leds.led_p2
P1_PAIRS[0] << p1_pairs_o[0].DB_MAX_OUTPUT_PORT_TYPE
P1_PAIRS[1] << p1_pairs_o[1].DB_MAX_OUTPUT_PORT_TYPE
P1_PAIRS[2] << p1_pairs_o[2].DB_MAX_OUTPUT_PORT_TYPE
P1_PAIRS[3] << p1_pairs_o[3].DB_MAX_OUTPUT_PORT_TYPE
P2_PAIRS[0] << p2_pairs_o[0].DB_MAX_OUTPUT_PORT_TYPE
P2_PAIRS[1] << p2_pairs_o[1].DB_MAX_OUTPUT_PORT_TYPE
P2_PAIRS[2] << p2_pairs_o[2].DB_MAX_OUTPUT_PORT_TYPE
P2_PAIRS[3] << p2_pairs_o[3].DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] << hex7seg_active_low:u_hex_p1.seg
HEX0[1] << hex7seg_active_low:u_hex_p1.seg
HEX0[2] << hex7seg_active_low:u_hex_p1.seg
HEX0[3] << hex7seg_active_low:u_hex_p1.seg
HEX0[4] << hex7seg_active_low:u_hex_p1.seg
HEX0[5] << hex7seg_active_low:u_hex_p1.seg
HEX0[6] << hex7seg_active_low:u_hex_p1.seg
HEX1[0] << hex7seg_active_low:u_hex_p2.seg
HEX1[1] << hex7seg_active_low:u_hex_p2.seg
HEX1[2] << hex7seg_active_low:u_hex_p2.seg
HEX1[3] << hex7seg_active_low:u_hex_p2.seg
HEX1[4] << hex7seg_active_low:u_hex_p2.seg
HEX1[5] << hex7seg_active_low:u_hex_p2.seg
HEX1[6] << hex7seg_active_low:u_hex_p2.seg


|memoria_fpga_top|pll:u_pll
inclk0 => toggle.CLK
c0 <= toggle.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|vgaController:u_vgac
vgaclk => y[0]~reg0.CLK
vgaclk => y[1]~reg0.CLK
vgaclk => y[2]~reg0.CLK
vgaclk => y[3]~reg0.CLK
vgaclk => y[4]~reg0.CLK
vgaclk => y[5]~reg0.CLK
vgaclk => y[6]~reg0.CLK
vgaclk => y[7]~reg0.CLK
vgaclk => y[8]~reg0.CLK
vgaclk => y[9]~reg0.CLK
vgaclk => x[0]~reg0.CLK
vgaclk => x[1]~reg0.CLK
vgaclk => x[2]~reg0.CLK
vgaclk => x[3]~reg0.CLK
vgaclk => x[4]~reg0.CLK
vgaclk => x[5]~reg0.CLK
vgaclk => x[6]~reg0.CLK
vgaclk => x[7]~reg0.CLK
vgaclk => x[8]~reg0.CLK
vgaclk => x[9]~reg0.CLK
hsync <= hsync.DB_MAX_OUTPUT_PORT_TYPE
vsync <= vsync.DB_MAX_OUTPUT_PORT_TYPE
sync_b <= sync_b.DB_MAX_OUTPUT_PORT_TYPE
blank_b <= blank_b.DB_MAX_OUTPUT_PORT_TYPE
x[0] <= x[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[3] <= x[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[4] <= x[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[5] <= x[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[6] <= x[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[7] <= x[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[8] <= x[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[9] <= x[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[0] <= y[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= y[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[8] <= y[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[9] <= y[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|btn_debouncer:u_db_start
clk => level_q.CLK
clk => stable_q.CLK
clk => cnt_q[0].CLK
clk => cnt_q[1].CLK
clk => cnt_q[2].CLK
clk => cnt_q[3].CLK
clk => cnt_q[4].CLK
clk => cnt_q[5].CLK
clk => cnt_q[6].CLK
clk => cnt_q[7].CLK
clk => cnt_q[8].CLK
clk => cnt_q[9].CLK
clk => cnt_q[10].CLK
clk => cnt_q[11].CLK
clk => cnt_q[12].CLK
clk => cnt_q[13].CLK
clk => cnt_q[14].CLK
clk => cnt_q[15].CLK
clk => cnt_q[16].CLK
clk => cnt_q[17].CLK
clk => btn_sync1.CLK
clk => btn_sync0.CLK
rst_n => stable_q.PRESET
rst_n => cnt_q[0].ACLR
rst_n => cnt_q[1].ACLR
rst_n => cnt_q[2].ACLR
rst_n => cnt_q[3].ACLR
rst_n => cnt_q[4].ACLR
rst_n => cnt_q[5].ACLR
rst_n => cnt_q[6].ACLR
rst_n => cnt_q[7].ACLR
rst_n => cnt_q[8].ACLR
rst_n => cnt_q[9].ACLR
rst_n => cnt_q[10].ACLR
rst_n => cnt_q[11].ACLR
rst_n => cnt_q[12].ACLR
rst_n => cnt_q[13].ACLR
rst_n => cnt_q[14].ACLR
rst_n => cnt_q[15].ACLR
rst_n => cnt_q[16].ACLR
rst_n => cnt_q[17].ACLR
rst_n => level_q.ACLR
rst_n => btn_sync1.PRESET
rst_n => btn_sync0.PRESET
btn_n_raw => btn_sync0.DATAIN
level <= level_q.DB_MAX_OUTPUT_PORT_TYPE
rising_edge <= rising_edge.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|btn_debouncer:u_db_click
clk => level_q.CLK
clk => stable_q.CLK
clk => cnt_q[0].CLK
clk => cnt_q[1].CLK
clk => cnt_q[2].CLK
clk => cnt_q[3].CLK
clk => cnt_q[4].CLK
clk => cnt_q[5].CLK
clk => cnt_q[6].CLK
clk => cnt_q[7].CLK
clk => cnt_q[8].CLK
clk => cnt_q[9].CLK
clk => cnt_q[10].CLK
clk => cnt_q[11].CLK
clk => cnt_q[12].CLK
clk => cnt_q[13].CLK
clk => cnt_q[14].CLK
clk => cnt_q[15].CLK
clk => cnt_q[16].CLK
clk => cnt_q[17].CLK
clk => btn_sync1.CLK
clk => btn_sync0.CLK
rst_n => stable_q.PRESET
rst_n => cnt_q[0].ACLR
rst_n => cnt_q[1].ACLR
rst_n => cnt_q[2].ACLR
rst_n => cnt_q[3].ACLR
rst_n => cnt_q[4].ACLR
rst_n => cnt_q[5].ACLR
rst_n => cnt_q[6].ACLR
rst_n => cnt_q[7].ACLR
rst_n => cnt_q[8].ACLR
rst_n => cnt_q[9].ACLR
rst_n => cnt_q[10].ACLR
rst_n => cnt_q[11].ACLR
rst_n => cnt_q[12].ACLR
rst_n => cnt_q[13].ACLR
rst_n => cnt_q[14].ACLR
rst_n => cnt_q[15].ACLR
rst_n => cnt_q[16].ACLR
rst_n => cnt_q[17].ACLR
rst_n => level_q.ACLR
rst_n => btn_sync1.PRESET
rst_n => btn_sync0.PRESET
btn_n_raw => btn_sync0.DATAIN
level <= level_q.DB_MAX_OUTPUT_PORT_TYPE
rising_edge <= rising_edge.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|memory_game_top_bc:u_game
clk => clk.IN4
rst_n => rst_n.IN3
start_btn => start_btn.IN2
click_e => click_e.IN1
sel_idx[0] => sel_idx[0].IN2
sel_idx[1] => sel_idx[1].IN2
sel_idx[2] => sel_idx[2].IN2
sel_idx[3] => sel_idx[3].IN2
show_winner_o <= show_winner.DB_MAX_OUTPUT_PORT_TYPE
card_faceup_o[0] <= board_core:u_board.card_faceup
card_faceup_o[1] <= board_core:u_board.card_faceup
card_faceup_o[2] <= board_core:u_board.card_faceup
card_faceup_o[3] <= board_core:u_board.card_faceup
card_faceup_o[4] <= board_core:u_board.card_faceup
card_faceup_o[5] <= board_core:u_board.card_faceup
card_faceup_o[6] <= board_core:u_board.card_faceup
card_faceup_o[7] <= board_core:u_board.card_faceup
card_faceup_o[8] <= board_core:u_board.card_faceup
card_faceup_o[9] <= board_core:u_board.card_faceup
card_faceup_o[10] <= board_core:u_board.card_faceup
card_faceup_o[11] <= board_core:u_board.card_faceup
card_faceup_o[12] <= board_core:u_board.card_faceup
card_faceup_o[13] <= board_core:u_board.card_faceup
card_faceup_o[14] <= board_core:u_board.card_faceup
card_faceup_o[15] <= board_core:u_board.card_faceup
card_removed_o[0] <= board_core:u_board.card_removed
card_removed_o[1] <= board_core:u_board.card_removed
card_removed_o[2] <= board_core:u_board.card_removed
card_removed_o[3] <= board_core:u_board.card_removed
card_removed_o[4] <= board_core:u_board.card_removed
card_removed_o[5] <= board_core:u_board.card_removed
card_removed_o[6] <= board_core:u_board.card_removed
card_removed_o[7] <= board_core:u_board.card_removed
card_removed_o[8] <= board_core:u_board.card_removed
card_removed_o[9] <= board_core:u_board.card_removed
card_removed_o[10] <= board_core:u_board.card_removed
card_removed_o[11] <= board_core:u_board.card_removed
card_removed_o[12] <= board_core:u_board.card_removed
card_removed_o[13] <= board_core:u_board.card_removed
card_removed_o[14] <= board_core:u_board.card_removed
card_removed_o[15] <= board_core:u_board.card_removed
current_player_o <= current_player.DB_MAX_OUTPUT_PORT_TYPE
p1_pairs_o[0] <= scoreboard_pairs:u_score.p1_pairs
p1_pairs_o[1] <= scoreboard_pairs:u_score.p1_pairs
p1_pairs_o[2] <= scoreboard_pairs:u_score.p1_pairs
p1_pairs_o[3] <= scoreboard_pairs:u_score.p1_pairs
p2_pairs_o[0] <= scoreboard_pairs:u_score.p2_pairs
p2_pairs_o[1] <= scoreboard_pairs:u_score.p2_pairs
p2_pairs_o[2] <= scoreboard_pairs:u_score.p2_pairs
p2_pairs_o[3] <= scoreboard_pairs:u_score.p2_pairs
winner_code_o[0] <= winner_code_o.DB_MAX_OUTPUT_PORT_TYPE
winner_code_o[1] <= winner_code_o.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|memory_game_top_bc:u_game|board_core:u_board
clk => remove_ack~reg0.CLK
clk => unflip_ack~reg0.CLK
clk => flip_ack~reg0.CLK
clk => state_q[15][0].CLK
clk => state_q[15][1].CLK
clk => state_q[14][0].CLK
clk => state_q[14][1].CLK
clk => state_q[13][0].CLK
clk => state_q[13][1].CLK
clk => state_q[12][0].CLK
clk => state_q[12][1].CLK
clk => state_q[11][0].CLK
clk => state_q[11][1].CLK
clk => state_q[10][0].CLK
clk => state_q[10][1].CLK
clk => state_q[9][0].CLK
clk => state_q[9][1].CLK
clk => state_q[8][0].CLK
clk => state_q[8][1].CLK
clk => state_q[7][0].CLK
clk => state_q[7][1].CLK
clk => state_q[6][0].CLK
clk => state_q[6][1].CLK
clk => state_q[5][0].CLK
clk => state_q[5][1].CLK
clk => state_q[4][0].CLK
clk => state_q[4][1].CLK
clk => state_q[3][0].CLK
clk => state_q[3][1].CLK
clk => state_q[2][0].CLK
clk => state_q[2][1].CLK
clk => state_q[1][0].CLK
clk => state_q[1][1].CLK
clk => state_q[0][0].CLK
clk => state_q[0][1].CLK
rst_n => remove_ack~reg0.ACLR
rst_n => unflip_ack~reg0.ACLR
rst_n => flip_ack~reg0.ACLR
rst_n => state_q[15][0].ACLR
rst_n => state_q[15][1].ACLR
rst_n => state_q[14][0].ACLR
rst_n => state_q[14][1].ACLR
rst_n => state_q[13][0].ACLR
rst_n => state_q[13][1].ACLR
rst_n => state_q[12][0].ACLR
rst_n => state_q[12][1].ACLR
rst_n => state_q[11][0].ACLR
rst_n => state_q[11][1].ACLR
rst_n => state_q[10][0].ACLR
rst_n => state_q[10][1].ACLR
rst_n => state_q[9][0].ACLR
rst_n => state_q[9][1].ACLR
rst_n => state_q[8][0].ACLR
rst_n => state_q[8][1].ACLR
rst_n => state_q[7][0].ACLR
rst_n => state_q[7][1].ACLR
rst_n => state_q[6][0].ACLR
rst_n => state_q[6][1].ACLR
rst_n => state_q[5][0].ACLR
rst_n => state_q[5][1].ACLR
rst_n => state_q[4][0].ACLR
rst_n => state_q[4][1].ACLR
rst_n => state_q[3][0].ACLR
rst_n => state_q[3][1].ACLR
rst_n => state_q[2][0].ACLR
rst_n => state_q[2][1].ACLR
rst_n => state_q[1][0].ACLR
rst_n => state_q[1][1].ACLR
rst_n => state_q[0][0].ACLR
rst_n => state_q[0][1].ACLR
sel_idx[0] => Mux0.IN3
sel_idx[0] => Mux1.IN3
sel_idx[1] => Mux0.IN2
sel_idx[1] => Mux1.IN2
sel_idx[2] => Mux0.IN1
sel_idx[2] => Mux1.IN1
sel_idx[3] => Mux0.IN0
sel_idx[3] => Mux1.IN0
act_idx[0] => Mux2.IN3
act_idx[0] => Mux3.IN3
act_idx[0] => Decoder0.IN3
act_idx[1] => Mux2.IN2
act_idx[1] => Mux3.IN2
act_idx[1] => Decoder0.IN2
act_idx[2] => Mux2.IN1
act_idx[2] => Mux3.IN1
act_idx[2] => Decoder0.IN1
act_idx[3] => Mux2.IN0
act_idx[3] => Mux3.IN0
act_idx[3] => Decoder0.IN0
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => state_q.OUTPUTSELECT
req_flip => flip_ack.OUTPUTSELECT
req_flip => unflip_ack.OUTPUTSELECT
req_flip => remove_ack.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => state_q.OUTPUTSELECT
req_unflip => unflip_ack.OUTPUTSELECT
req_unflip => remove_ack.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => state_q.OUTPUTSELECT
req_remove_pair => remove_ack.OUTPUTSELECT
can_flip_sel <= can_flip_sel.DB_MAX_OUTPUT_PORT_TYPE
flip_ack <= flip_ack~reg0.DB_MAX_OUTPUT_PORT_TYPE
unflip_ack <= unflip_ack~reg0.DB_MAX_OUTPUT_PORT_TYPE
remove_ack <= remove_ack~reg0.DB_MAX_OUTPUT_PORT_TYPE
all_pairs_done <= Equal33.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[0] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[1] <= Equal2.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[2] <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[3] <= Equal4.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[4] <= Equal5.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[5] <= Equal6.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[6] <= Equal7.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[7] <= Equal8.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[8] <= Equal9.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[9] <= Equal10.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[10] <= Equal11.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[11] <= Equal12.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[12] <= Equal13.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[13] <= Equal14.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[14] <= Equal15.DB_MAX_OUTPUT_PORT_TYPE
card_faceup[15] <= Equal16.DB_MAX_OUTPUT_PORT_TYPE
card_removed[0] <= Equal17.DB_MAX_OUTPUT_PORT_TYPE
card_removed[1] <= Equal18.DB_MAX_OUTPUT_PORT_TYPE
card_removed[2] <= Equal19.DB_MAX_OUTPUT_PORT_TYPE
card_removed[3] <= Equal20.DB_MAX_OUTPUT_PORT_TYPE
card_removed[4] <= Equal21.DB_MAX_OUTPUT_PORT_TYPE
card_removed[5] <= Equal22.DB_MAX_OUTPUT_PORT_TYPE
card_removed[6] <= Equal23.DB_MAX_OUTPUT_PORT_TYPE
card_removed[7] <= Equal24.DB_MAX_OUTPUT_PORT_TYPE
card_removed[8] <= Equal25.DB_MAX_OUTPUT_PORT_TYPE
card_removed[9] <= Equal26.DB_MAX_OUTPUT_PORT_TYPE
card_removed[10] <= Equal27.DB_MAX_OUTPUT_PORT_TYPE
card_removed[11] <= Equal28.DB_MAX_OUTPUT_PORT_TYPE
card_removed[12] <= Equal29.DB_MAX_OUTPUT_PORT_TYPE
card_removed[13] <= Equal30.DB_MAX_OUTPUT_PORT_TYPE
card_removed[14] <= Equal31.DB_MAX_OUTPUT_PORT_TYPE
card_removed[15] <= Equal32.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|memory_game_top_bc:u_game|pair_check_rom:u_pair
clk => is_match~reg0.CLK
clk => done~reg0.CLK
clk => start_q.CLK
rst_n => is_match~reg0.ACLR
rst_n => done~reg0.ACLR
rst_n => start_q.ACLR
start => always0.IN1
start => start_q.DATAIN
idx_a[0] => Equal0.IN4
idx_a[1] => Equal0.IN3
idx_a[2] => Equal0.IN2
idx_a[3] => ~NO_FANOUT~
idx_b[0] => Equal0.IN7
idx_b[1] => Equal0.IN6
idx_b[2] => Equal0.IN5
idx_b[3] => ~NO_FANOUT~
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
is_match <= is_match~reg0.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|memory_game_top_bc:u_game|memory_game_fsm_bc:u_fsm
clk => idx_target[0].CLK
clk => idx_target[1].CLK
clk => idx_target[2].CLK
clk => idx_target[3].CLK
clk => idx_b[0].CLK
clk => idx_b[1].CLK
clk => idx_b[2].CLK
clk => idx_b[3].CLK
clk => idx_a[0].CLK
clk => idx_a[1].CLK
clk => idx_a[2].CLK
clk => idx_a[3].CLK
clk => cur_player.CLK
clk => s~1.DATAIN
reset => idx_target[0].ACLR
reset => idx_target[1].ACLR
reset => idx_target[2].ACLR
reset => idx_target[3].ACLR
reset => idx_b[0].ACLR
reset => idx_b[1].ACLR
reset => idx_b[2].ACLR
reset => idx_b[3].ACLR
reset => idx_a[0].ACLR
reset => idx_a[1].ACLR
reset => idx_a[2].ACLR
reset => idx_a[3].ACLR
reset => cur_player.ACLR
reset => s~3.DATAIN
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => ns.OUTPUTSELECT
start_game => Selector0.IN13
start_game => Selector24.IN12
select_e => always1.IN0
sel_idx[0] => Equal0.IN3
sel_idx[0] => idx_target.DATAA
sel_idx[0] => idx_target.DATAA
sel_idx[1] => Equal0.IN2
sel_idx[1] => idx_target.DATAA
sel_idx[1] => idx_target.DATAA
sel_idx[2] => Equal0.IN1
sel_idx[2] => idx_target.DATAA
sel_idx[2] => idx_target.DATAA
sel_idx[3] => Equal0.IN0
sel_idx[3] => idx_target.DATAA
sel_idx[3] => idx_target.DATAA
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
timer_done => ns.OUTPUTSELECT
all_pairs_done => Selector24.IN14
all_pairs_done => Selector2.IN11
rnd_idx[0] => Equal1.IN3
rnd_idx[0] => idx_target.DATAB
rnd_idx[0] => idx_target.DATAB
rnd_idx[1] => Equal1.IN2
rnd_idx[1] => idx_target.DATAB
rnd_idx[1] => idx_target.DATAB
rnd_idx[2] => Equal1.IN1
rnd_idx[2] => idx_target.DATAB
rnd_idx[2] => idx_target.DATAB
rnd_idx[3] => Equal1.IN0
rnd_idx[3] => idx_target.DATAB
rnd_idx[3] => idx_target.DATAB
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => ns.OUTPUTSELECT
rnd_valid => always1.IN1
can_flip_sel => always1.IN1
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => ns.OUTPUTSELECT
flip_ack => always2.IN0
flip_ack => always2.IN0
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
unflip_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
remove_ack => ns.OUTPUTSELECT
req_flip <= req_flip.DB_MAX_OUTPUT_PORT_TYPE
req_unflip <= req_unflip.DB_MAX_OUTPUT_PORT_TYPE
req_remove_pair <= req_remove_pair.DB_MAX_OUTPUT_PORT_TYPE
act_idx[0] <= Selector28.DB_MAX_OUTPUT_PORT_TYPE
act_idx[1] <= Selector27.DB_MAX_OUTPUT_PORT_TYPE
act_idx[2] <= Selector26.DB_MAX_OUTPUT_PORT_TYPE
act_idx[3] <= Selector25.DB_MAX_OUTPUT_PORT_TYPE
pair_start <= pair_start.DB_MAX_OUTPUT_PORT_TYPE
pair_done => ns.OUTPUTSELECT
pair_done => ns.OUTPUTSELECT
pair_done => Selector13.IN8
pair_match => ns.DATAB
pair_match => ns.DATAB
idx_a_out[0] <= idx_a[0].DB_MAX_OUTPUT_PORT_TYPE
idx_a_out[1] <= idx_a[1].DB_MAX_OUTPUT_PORT_TYPE
idx_a_out[2] <= idx_a[2].DB_MAX_OUTPUT_PORT_TYPE
idx_a_out[3] <= idx_a[3].DB_MAX_OUTPUT_PORT_TYPE
idx_b_out[0] <= idx_b[0].DB_MAX_OUTPUT_PORT_TYPE
idx_b_out[1] <= idx_b[1].DB_MAX_OUTPUT_PORT_TYPE
idx_b_out[2] <= idx_b[2].DB_MAX_OUTPUT_PORT_TYPE
idx_b_out[3] <= idx_b[3].DB_MAX_OUTPUT_PORT_TYPE
turn_load_15 <= turn_load_15.DB_MAX_OUTPUT_PORT_TYPE
turn_start <= turn_start.DB_MAX_OUTPUT_PORT_TYPE
turn_pause <= WideNor0.DB_MAX_OUTPUT_PORT_TYPE
turn_reset <= <GND>
game_active <= game_active.DB_MAX_OUTPUT_PORT_TYPE
current_player <= cur_player.DB_MAX_OUTPUT_PORT_TYPE
enable_random <= enable_random.DB_MAX_OUTPUT_PORT_TYPE
validate_cards <= validate_cards.DB_MAX_OUTPUT_PORT_TYPE
update_score <= update_score.DB_MAX_OUTPUT_PORT_TYPE
show_winner <= show_winner.DB_MAX_OUTPUT_PORT_TYPE
state[0] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
state[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
state[3] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
state[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
state[5] <= <GND>


|memoria_fpga_top|memory_game_top_bc:u_game|scoreboard_pairs:u_score
clk => p2_pairs[0]~reg0.CLK
clk => p2_pairs[1]~reg0.CLK
clk => p2_pairs[2]~reg0.CLK
clk => p2_pairs[3]~reg0.CLK
clk => p1_pairs[0]~reg0.CLK
clk => p1_pairs[1]~reg0.CLK
clk => p1_pairs[2]~reg0.CLK
clk => p1_pairs[3]~reg0.CLK
rst_n => p2_pairs[0]~reg0.ACLR
rst_n => p2_pairs[1]~reg0.ACLR
rst_n => p2_pairs[2]~reg0.ACLR
rst_n => p2_pairs[3]~reg0.ACLR
rst_n => p1_pairs[0]~reg0.ACLR
rst_n => p1_pairs[1]~reg0.ACLR
rst_n => p1_pairs[2]~reg0.ACLR
rst_n => p1_pairs[3]~reg0.ACLR
start_game => p1_pairs.OUTPUTSELECT
start_game => p1_pairs.OUTPUTSELECT
start_game => p1_pairs.OUTPUTSELECT
start_game => p1_pairs.OUTPUTSELECT
start_game => p2_pairs.OUTPUTSELECT
start_game => p2_pairs.OUTPUTSELECT
start_game => p2_pairs.OUTPUTSELECT
start_game => p2_pairs.OUTPUTSELECT
update_score => always0.IN0
current_player => p1_pairs.OUTPUTSELECT
current_player => p1_pairs.OUTPUTSELECT
current_player => p1_pairs.OUTPUTSELECT
current_player => p1_pairs.OUTPUTSELECT
current_player => p2_pairs.OUTPUTSELECT
current_player => p2_pairs.OUTPUTSELECT
current_player => p2_pairs.OUTPUTSELECT
current_player => p2_pairs.OUTPUTSELECT
show_winner => always0.IN1
p1_pairs[0] <= p1_pairs[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p1_pairs[1] <= p1_pairs[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p1_pairs[2] <= p1_pairs[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p1_pairs[3] <= p1_pairs[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2_pairs[0] <= p2_pairs[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2_pairs[1] <= p2_pairs[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2_pairs[2] <= p2_pairs[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2_pairs[3] <= p2_pairs[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|turn_leds:u_leds
clk => div_q[0].CLK
clk => div_q[1].CLK
clk => div_q[2].CLK
clk => div_q[3].CLK
clk => div_q[4].CLK
clk => div_q[5].CLK
clk => div_q[6].CLK
clk => div_q[7].CLK
clk => div_q[8].CLK
clk => div_q[9].CLK
clk => div_q[10].CLK
clk => div_q[11].CLK
clk => div_q[12].CLK
clk => div_q[13].CLK
clk => div_q[14].CLK
clk => div_q[15].CLK
clk => div_q[16].CLK
clk => div_q[17].CLK
clk => div_q[18].CLK
clk => div_q[19].CLK
clk => div_q[20].CLK
clk => div_q[21].CLK
clk => div_q[22].CLK
clk => div_q[23].CLK
clk => div_q[24].CLK
clk => div_q[25].CLK
rst_n => div_q[0].ACLR
rst_n => div_q[1].ACLR
rst_n => div_q[2].ACLR
rst_n => div_q[3].ACLR
rst_n => div_q[4].ACLR
rst_n => div_q[5].ACLR
rst_n => div_q[6].ACLR
rst_n => div_q[7].ACLR
rst_n => div_q[8].ACLR
rst_n => div_q[9].ACLR
rst_n => div_q[10].ACLR
rst_n => div_q[11].ACLR
rst_n => div_q[12].ACLR
rst_n => div_q[13].ACLR
rst_n => div_q[14].ACLR
rst_n => div_q[15].ACLR
rst_n => div_q[16].ACLR
rst_n => div_q[17].ACLR
rst_n => div_q[18].ACLR
rst_n => div_q[19].ACLR
rst_n => div_q[20].ACLR
rst_n => div_q[21].ACLR
rst_n => div_q[22].ACLR
rst_n => div_q[23].ACLR
rst_n => div_q[24].ACLR
rst_n => div_q[25].ACLR
game_active => led_p1.OUTPUTSELECT
game_active => led_p2.OUTPUTSELECT
current_player => led_p1.OUTPUTSELECT
current_player => led_p2.OUTPUTSELECT
led_p1 <= led_p1.DB_MAX_OUTPUT_PORT_TYPE
led_p2 <= led_p2.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|hex7seg_active_low:u_hex_p1
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|hex7seg_active_low:u_hex_p2
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|videoGen_game:u_vgen
vgaclk => vgaclk.IN1
blank_b => blank_b.IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
x[8] => x[8].IN1
x[9] => x[9].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
y[7] => y[7].IN1
y[8] => y[8].IN1
y[9] => y[9].IN1
faceup_mask[0] => faceup_mask[0].IN1
faceup_mask[1] => faceup_mask[1].IN1
faceup_mask[2] => faceup_mask[2].IN1
faceup_mask[3] => faceup_mask[3].IN1
faceup_mask[4] => faceup_mask[4].IN1
faceup_mask[5] => faceup_mask[5].IN1
faceup_mask[6] => faceup_mask[6].IN1
faceup_mask[7] => faceup_mask[7].IN1
faceup_mask[8] => faceup_mask[8].IN1
faceup_mask[9] => faceup_mask[9].IN1
faceup_mask[10] => faceup_mask[10].IN1
faceup_mask[11] => faceup_mask[11].IN1
faceup_mask[12] => faceup_mask[12].IN1
faceup_mask[13] => faceup_mask[13].IN1
faceup_mask[14] => faceup_mask[14].IN1
faceup_mask[15] => faceup_mask[15].IN1
removed_mask[0] => removed_mask[0].IN1
removed_mask[1] => removed_mask[1].IN1
removed_mask[2] => removed_mask[2].IN1
removed_mask[3] => removed_mask[3].IN1
removed_mask[4] => removed_mask[4].IN1
removed_mask[5] => removed_mask[5].IN1
removed_mask[6] => removed_mask[6].IN1
removed_mask[7] => removed_mask[7].IN1
removed_mask[8] => removed_mask[8].IN1
removed_mask[9] => removed_mask[9].IN1
removed_mask[10] => removed_mask[10].IN1
removed_mask[11] => removed_mask[11].IN1
removed_mask[12] => removed_mask[12].IN1
removed_mask[13] => removed_mask[13].IN1
removed_mask[14] => removed_mask[14].IN1
removed_mask[15] => removed_mask[15].IN1
sel_idx[0] => sel_idx[0].IN1
sel_idx[1] => sel_idx[1].IN1
sel_idx[2] => sel_idx[2].IN1
sel_idx[3] => sel_idx[3].IN1
show_winner => show_winner.IN1
winner_code[0] => Decoder0.IN1
winner_code[0] => win_r.DATAA
winner_code[1] => Decoder0.IN0
winner_code[1] => win_r.DATAA
winner_code[1] => win_b.DATAA
r[0] <= r[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[1] <= r[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[2] <= r[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[3] <= r[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[4] <= r[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[5] <= r[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[6] <= r[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[7] <= r[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[0] <= g[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[1] <= g[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[2] <= g[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[3] <= g[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[4] <= g[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[5] <= g[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[6] <= g[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[7] <= g[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[0] <= b[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[1] <= b[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[2] <= b[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[3] <= b[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[4] <= b[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[5] <= b[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[6] <= b[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[7] <= b[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|memoria_fpga_top|videoGen_game:u_vgen|cardGrid_game:u_grid
vgaclk => b[0]~reg0.CLK
vgaclk => b[1]~reg0.CLK
vgaclk => b[2]~reg0.CLK
vgaclk => b[3]~reg0.CLK
vgaclk => b[4]~reg0.CLK
vgaclk => b[5]~reg0.CLK
vgaclk => b[6]~reg0.CLK
vgaclk => b[7]~reg0.CLK
vgaclk => g[0]~reg0.CLK
vgaclk => g[1]~reg0.CLK
vgaclk => g[2]~reg0.CLK
vgaclk => g[3]~reg0.CLK
vgaclk => g[4]~reg0.CLK
vgaclk => g[5]~reg0.CLK
vgaclk => g[6]~reg0.CLK
vgaclk => g[7]~reg0.CLK
vgaclk => r[0]~reg0.CLK
vgaclk => r[1]~reg0.CLK
vgaclk => r[2]~reg0.CLK
vgaclk => r[3]~reg0.CLK
vgaclk => r[4]~reg0.CLK
vgaclk => r[5]~reg0.CLK
vgaclk => r[6]~reg0.CLK
vgaclk => r[7]~reg0.CLK
blank_b => r.OUTPUTSELECT
blank_b => r.OUTPUTSELECT
blank_b => r.OUTPUTSELECT
blank_b => r.OUTPUTSELECT
blank_b => r.OUTPUTSELECT
blank_b => r.OUTPUTSELECT
blank_b => r.OUTPUTSELECT
blank_b => r.OUTPUTSELECT
blank_b => g.OUTPUTSELECT
blank_b => g.OUTPUTSELECT
blank_b => g.OUTPUTSELECT
blank_b => g.OUTPUTSELECT
blank_b => g.OUTPUTSELECT
blank_b => g.OUTPUTSELECT
blank_b => g.OUTPUTSELECT
blank_b => b.OUTPUTSELECT
blank_b => b.OUTPUTSELECT
blank_b => b.OUTPUTSELECT
blank_b => b.OUTPUTSELECT
blank_b => b.OUTPUTSELECT
blank_b => b.OUTPUTSELECT
blank_b => b.OUTPUTSELECT
blank_b => b.OUTPUTSELECT
x[0] => LessThan0.IN20
x[0] => LessThan1.IN20
x[0] => Div0.IN10
x[0] => Add5.IN64
x[1] => LessThan0.IN19
x[1] => LessThan1.IN19
x[1] => Div0.IN9
x[1] => Add5.IN63
x[2] => LessThan0.IN18
x[2] => LessThan1.IN18
x[2] => Add0.IN16
x[2] => Add5.IN62
x[3] => LessThan0.IN17
x[3] => LessThan1.IN17
x[3] => Add0.IN15
x[3] => Add5.IN61
x[4] => LessThan0.IN16
x[4] => LessThan1.IN16
x[4] => Add0.IN14
x[4] => Add5.IN60
x[5] => LessThan0.IN15
x[5] => LessThan1.IN15
x[5] => Add0.IN13
x[5] => Add5.IN59
x[6] => LessThan0.IN14
x[6] => LessThan1.IN14
x[6] => Add0.IN12
x[6] => Add5.IN58
x[7] => LessThan0.IN13
x[7] => LessThan1.IN13
x[7] => Add0.IN11
x[7] => Add5.IN57
x[8] => LessThan0.IN12
x[8] => LessThan1.IN12
x[8] => Add0.IN10
x[8] => Add5.IN56
x[9] => LessThan0.IN11
x[9] => LessThan1.IN11
x[9] => Add0.IN9
x[9] => Add5.IN55
y[0] => LessThan2.IN20
y[0] => LessThan3.IN20
y[0] => Div1.IN9
y[0] => Add6.IN64
y[1] => LessThan2.IN19
y[1] => LessThan3.IN19
y[1] => Div1.IN8
y[1] => Add6.IN63
y[2] => LessThan2.IN18
y[2] => LessThan3.IN18
y[2] => Add1.IN16
y[2] => Add6.IN62
y[3] => LessThan2.IN17
y[3] => LessThan3.IN17
y[3] => Add1.IN15
y[3] => Add6.IN61
y[4] => LessThan2.IN16
y[4] => LessThan3.IN16
y[4] => Add1.IN14
y[4] => Add6.IN60
y[5] => LessThan2.IN15
y[5] => LessThan3.IN15
y[5] => Add1.IN13
y[5] => Add6.IN59
y[6] => LessThan2.IN14
y[6] => LessThan3.IN14
y[6] => Add1.IN12
y[6] => Add6.IN58
y[7] => LessThan2.IN13
y[7] => LessThan3.IN13
y[7] => Add1.IN11
y[7] => Add6.IN57
y[8] => LessThan2.IN12
y[8] => LessThan3.IN12
y[8] => Add1.IN10
y[8] => Add6.IN56
y[9] => LessThan2.IN11
y[9] => LessThan3.IN11
y[9] => Add1.IN9
y[9] => Add6.IN55
faceup_mask[0] => Mux0.IN15
faceup_mask[1] => Mux0.IN14
faceup_mask[2] => Mux0.IN13
faceup_mask[3] => Mux0.IN12
faceup_mask[4] => Mux0.IN11
faceup_mask[5] => Mux0.IN10
faceup_mask[6] => Mux0.IN9
faceup_mask[7] => Mux0.IN8
faceup_mask[8] => Mux0.IN7
faceup_mask[9] => Mux0.IN6
faceup_mask[10] => Mux0.IN5
faceup_mask[11] => Mux0.IN4
faceup_mask[12] => Mux0.IN3
faceup_mask[13] => Mux0.IN2
faceup_mask[14] => Mux0.IN1
faceup_mask[15] => Mux0.IN0
removed_mask[0] => Mux1.IN15
removed_mask[1] => Mux1.IN14
removed_mask[2] => Mux1.IN13
removed_mask[3] => Mux1.IN12
removed_mask[4] => Mux1.IN11
removed_mask[5] => Mux1.IN10
removed_mask[6] => Mux1.IN9
removed_mask[7] => Mux1.IN8
removed_mask[8] => Mux1.IN7
removed_mask[9] => Mux1.IN6
removed_mask[10] => Mux1.IN5
removed_mask[11] => Mux1.IN4
removed_mask[12] => Mux1.IN3
removed_mask[13] => Mux1.IN2
removed_mask[14] => Mux1.IN1
removed_mask[15] => Mux1.IN0
sel_idx[0] => Equal0.IN3
sel_idx[1] => Equal0.IN2
sel_idx[2] => Equal0.IN1
sel_idx[3] => Equal0.IN0
show_winner => always10.IN1
r[0] <= r[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[1] <= r[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[2] <= r[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[3] <= r[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[4] <= r[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[5] <= r[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[6] <= r[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[7] <= r[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[0] <= g[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[1] <= g[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[2] <= g[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[3] <= g[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[4] <= g[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[5] <= g[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[6] <= g[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[7] <= g[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[0] <= b[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[1] <= b[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[2] <= b[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[3] <= b[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[4] <= b[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[5] <= b[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[6] <= b[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[7] <= b[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


